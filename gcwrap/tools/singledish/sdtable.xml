<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/tools/xml/casa.xsd">

 
	<tool name="sdtable" module="sdtable">
        <shortdescription>sd memory table container for single dish</shortdescription>
       
<code>
	<include>tools/singledish/sdtable_forward.h</include>
<private>
	<include>tools/singledish/sdtable_private.h</include>
</private>
</code>


   <method type="constructor" name="sdtable">
   <shortdescription>Construct a sdtable tool</shortdescription>
<input>
    <param type="string" direction="in" name="name">
    <description>input aips++ table  name</description>
    </param>
</input>
<returns type="casasdtable"/>
</method>

<method type="constructor" name="sdtable2">
   <shortdescription>Construct a sdtable tool</shortdescription>
<input>
   <param type="any" direction="in" name="tab">
	   <any type="record"/>
   <description>table</description>
   <value></value>
   </param>
</input>
<returns type="casasdtable"/>
</method>

   <method type="constructor" name="sdtable1">
   <shortdescription>Construct a sdtable tool</shortdescription>
<input>
   <param type="any" direction="in" name="tab">
	   <any type="record"/>
   <description>table</description>
   <value></value>
   </param>
   <param type="string" direction="in" name="expr">
   <description>expression for scan id constraint</description>
   </param>
</input>
<returns type="casasdtable"/>
</method>

   <method type="function" name="copy">
   <shortdescription>Makes a copy</shortdescription>
<input>
	<param type="string" direction="in" name="tosdtable">
		<description>name for copy of sdtable </description>
		<value></value>
	</param>
</input>
<returns type="casasdtable"/>
</method>

  <method type="function" name="open">
   <shortdescription>open an existing ASAP table</shortdescription>
<input>
        <param type="string" direction="in" name="insdtable">
                <description>name of input sd table </description>
                <value></value>
        </param>
</input>
<returns type="bool"/>
</method>

  <method type="function" name="close">
   <shortdescription>close an ASAP table</shortdescription>
<input>
</input>
<returns type="bool"/>
</method>

   <method type="function" name="getif">
   <shortdescription>Return the currently selected IF values </shortdescription>
<input>
</input>
<returns type="int"/>
</method>

   <method type="function" name="getbeam">
   <shortdescription>Return the currently  selected beam</shortdescription>
<input>
</input>
<returns type="int"/>
</method>

   <method type="function" name="getpol">
   <shortdescription>Return the currently selected polarization</shortdescription>
<returns type="int"/>
</method>

   <method type="function" name="lines">
   <shortdescription>List spectral lines</shortdescription>
<returns type="string"/>
</method>

   <method type="function" name="nif">
   <shortdescription>Rreturn the number of IFs</shortdescription>
<returns type="int"/>
</method>

   <method type="function" name="nbeam">
   <shortdescription>Rreturn the number of beams</shortdescription>
<returns type="int"/>
</method>

   <method type="function" name="npol">
   <shortdescription>Rreturn the number of polarization</shortdescription>
<returns type="int"/>
</method>

   <method type="function" name="nchan">
   <shortdescription>Rreturn the number of channels</shortdescription>
<returns type="int"/>
</method>

   <method type="function" name="nrow">
   <shortdescription>Rreturn the number of rows</shortdescription>
<returns type="int"/>
</method>

   <method type="function" name="setif">
   <shortdescription>Set the current IF</shortdescription>
<input>
   <param type="int" direction="in" name="whichif">
   <description>IF index to be set</description>
   </param>
   <value>0</value>
</input>
<returns type="bool"/>
</method>

   <method type="function" name="setbeam">
   <shortdescription>Set the current Beam</shortdescription>
<input>
   <param type="int" direction="in" name="whichbeam">
   <description>Beam index to be set</description>
   </param>
   <value>0</value>
</input>
<returns type="bool"/>
</method>

   <method type="function" name="setpol">
   <shortdescription>Set the current Polarization</shortdescription>
<input>
   <param type="int" direction="in" name="whichpol">
   <description>Polarization index to be set</description>
   </param>
   <value>0</value>
</input>
<returns type="bool"/>
</method>

   <method type="function" name="getfluxunit">
   <shortdescription>Get flux unit</shortdescription>
<input>
</input>
<returns type="string"/>
</method>

   <method type="function" name="setfluxunit">
   <shortdescription>Set flux unit</shortdescription>
<input>
   <param type="string" direction="in" name="unit">
   <description>unit</description>
   </param>
</input>
<returns type="bool"/>
</method>

   <method type="function" name="setinstrument">
   <shortdescription>Set instrument (string)</shortdescription>
<input>
   <param type="string" direction="in" name="instrument">
   <description>instrument name</description>
   </param>
</input>
<returns type="bool"/>
</method>

   <method type="function" name="getscan">
   <shortdescription>Get a memory table containing all the selected scan(s)</shortdescription>
<input>
   <param type="intArray" direction="in" name="scan">
   <description>scan(s)</description>
   </param>
</input>
<returns type="casasdtable"/>
</method>

   <method type="function" name="getsource">
  <shortdescription>Get a memory table containing all the selected source(s)</shortdescription>
<input>
   <param type="string" direction="in" name="source">
   <description>source name(s)</description>
   </param>
</input>
<returns type="casasdtable"/>
</method>

   <method type="function" name="getspectrum">
   <shortdescription>Get spectrum</shortdescription>
<input>
   <param type="int" direction="in" name="whichRow">
   <description>row number</description>
   <value>0</value>
   </param>
</input>
<returns type="doubleArray"/>
</method>

   <method type="function" name="nstokes">
   <shortdescription>Get length of Stokes</shortdescription>
<input>
</input>
<returns type="int"/>
</method>

   <method type="function" name="getstokesspectrum">
   <shortdescription>Get specific Stokes at cursor location</shortdescription>
<input>
   <param type="int" direction="in" name="whichRow">
   <description>row number</description>
   <value>0</value>
   </param>

   <param type="bool" direction="in" name="doPol">
   <description>polarization?</description>
   <value>false</value>
   </param>
</input>
<returns type="doubleArray"/>
</method>

   <method type="function" name="stokestopolspectrum">
   <shortdescription>Convert Stokes to linear or circular polarization</shortdescription>
<input>
   <param type="int" direction="in" name="whichRow">
   <description>row number</description>
   <value>0</value>
   </param>
   <param type="bool" direction="in" name="tolinear">
   <description></description>
   <value>false</value>
   </param>
   <param type="int" direction="in" name="thepol">
   <description>polarization index</description>
   <value>-1</value>
   </param>
</input>
<returns type="doubleArray"/>
</method>

   <method type="function" name="getpolarizationlabel">
   <shortdescription>Returns label for polarization </shortdescription>
<input>
   <param type="bool" direction="in" name="linear">
   <description>row number</description>
   <value>false</value>
   </param>
   <param type="bool" direction="in" name="stokes">
   <description></description>
   <value>false</value>
   </param>
   <param type="bool" direction="in" name="linpol">
   <description></description>
   <value>false</value>
   </param>
</input>
<returns type="string"/>
</method>

   <method type="function" name="setspectrum">
   <shortdescription>Add a spectral data at the given row in the table </shortdescription>
<input>
   <param type="doubleArray" direction="in" name="spectrum">
   <description>a vector contain spectral data</description>
   </param>
   <param type="int" direction="in" name="whichRow">
   <description>row number</description>
   <value>0</value>
   </param>
</input>
<returns type="bool"/>
</method>

   <method type="function" name="getabcissa">
   <shortdescription></shortdescription>
<input>
   <param type="int" direction="in" name="whichRow">
   <description>row number</description>
   <value>0</value>
   </param>
</input>
<returns type="doubleArray"/>
</method>

   <method type="function" name="getabcissalabel">
   <shortdescription></shortdescription>
<input>
   <param type="int" direction="in" name="whichRow">
   <description>row number</description>
   <value>0</value>
   </param>
</input>
<returns type="string"/>
</method>

   <method type="function" name="getmask">
   <shortdescription>Get mask for the given row</shortdescription>
<input>
   <param type="int" direction="in" name="whichRow">
   <description>row number</description>
   <value>0</value>
   </param>
</input>
<returns type="boolArray"/>
</method>

   <method type="function" name="gettsys">
   <shortdescription>Get Tsys for the given row</shortdescription>
<input>
</input>
<returns type="doubleArray"/>
</method>

   <method type="function" name="getsourcename">
   <shortdescription>Get source name for the given row</shortdescription>
<input>
   <param type="int" direction="in" name="whichRow">
   <description>row number</description>
   <value>0</value>
   </param>
</input>
<returns type="string"/>
</method>

   <method type="function" name="getelevation">
   <shortdescription>Get elevation for the given row</shortdescription>
<input>
   <param type="int" direction="in" name="whichRow">
   <description>row number</description>
   <value>0</value>
   </param>
</input>
<returns type="double"/>
</method>

   <method type="function" name="getazimuth">
   <shortdescription>Get azimuth for the given row</shortdescription>
<input>
   <param type="int" direction="in" name="whichRow">
   <description>row number</description>
   <value>0</value>
   </param>
</input>
<returns type="double"/>
</method>

   <method type="function" name="getparangle">
   <shortdescription>Get pallactic angle for the given row</shortdescription>
<input>
   <param type="int" direction="in" name="whichRow">
   <description>row number</description>
   <value>0</value>
   </param>
</input>
<returns type="double"/>
</method>

   <method type="function" name="gettime">
   <shortdescription>Get pallactic angle for the given row</shortdescription>
<input>
   <param type="int" direction="in" name="whichRow">
   <description>row number</description>
   <value>0</value>
   </param>
</input>
<returns type="string"/>
</method>

   <method type="function" name="flag">
   <shortdescription>Flag (irreversible)  the given row</shortdescription>
<input>
   <param type="int" direction="in" name="whichRow">
   <description>row number</description>
   <value>-1</value>
   </param>
</input>
<returns type="bool"/>
</method>

   <method type="function" name="save">
   <shortdescription>Save to the disk</shortdescription>
<input>
   <param type="string" direction="out" name="filename">
   <description>output filename</description>
   </param>
</input>
<returns type="bool"/>
</method>

   <method type="function" name="summary">
   <shortdescription>Print out summary</shortdescription>
<input>
   <param type="bool" direction="in" name="verbose">
   <description></description>
   <value>true</value>
   </param>
</input>
<returns type="bool"/>
</method>

   <method type="function" name="getrestfreqs">
   <shortdescription>Get rest frequencies </shortdescription>
<input>
</input>
<returns type="doubleArray"/>
</method>

   <method type="function" name="setrestfreqs">
   <shortdescription>Set rest frequencies </shortdescription>
<input>
   <param type="doubleArray" direction="in" name="restfreqs">
   <description>a vector of rest frequencies</description>
   </param>
   <param type="string" direction="in" name="unit">
   <description>a unit of rest frequencies</description>
   </param>
   <param type="stringArray" direction="in" name="lines">
   <description>Spectral lines</description>
   </param>
   <param type="string" direction="in" name="source">
   <description>Source name</description>
   </param>
   <param type="int" direction="in" name="whichif">
   <description>IF description</description>
   </param>
</input>
<returns type="bool"/>
</method>

   <method type="function" name="setcoordinfo">
   <shortdescription>Set coordinate information</shortdescription>
<input>
   <param type="stringArray" direction="in" name="theinfo">
   <description>a string of the info</description>
   </param>
</input>
<returns type="bool"/>
</method>

   <method type="function" name="getcoordinfo">
   <shortdescription>Get coordinate information</shortdescription>
<input>
</input>
<returns type="stringArray"/>
</method>

   <method type="function" name="gethistory">
   <shortdescription>Get history information</shortdescription>
<input>
</input>
<returns type="stringArray"/>
</method>

   <method type="function" name="addhistory">
   <shortdescription>Get history information</shortdescription>
<input>
   <param type="string" direction="in" name="theinfo">
   <description>a string of the info</description>
   </param>
</input>
<returns type="bool"/>
</method>

   <method type="function" name="addfit">
   <shortdescription>Add FITS table</shortdescription>
<input>
   <param type="int" direction="in" name="whichRow">
   <description>row number</description>
   </param>
   <param type="doubleArray" direction="in" name="p">
   <description></description>
   </param>
   <param type="boolArray" direction="in" name="m">
   <description></description>
   </param>
   <param type="stringArray" direction="in" name="f">
   <description></description>
   </param>
   <param type="intArray" direction="in" name="c">
   <description></description>
   </param>
</input>
<returns type="bool"/>
</method>

<!--
   <method type="function" name="getfit">
   <shortdescription>Get a FITS table</shortdescription>
<input>
</input>
<returns type="casasdfit"/>
</method>
-->

   <method type="function" name="recalc_azel">
   <shortdescription>Calcurate az-el </shortdescription>
<input>
</input>
<returns type="bool"/>
</method>

</tool>
</casaxml>
