<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd">


<!-- This is the param set for tsdbaseline -->

<task type="function" name="tsdsmooth" category="single dish" visibility="experimental">

  <shortdescription>Smooth spectral data </shortdescription>

  <description>
  Task tsdsmooth performs smoothing along spectral axis using user-specified 
  smoothing kernel. Currently only gaussian kernel is supported.
  </description>

  <input>

    <param type="string" name="infile"  mustexist="true">
        <description>name of input SD dataset</description>
        <value></value>
    </param>

    <param type="string" name="datacolumn" ignorecase="true">
        <description>name of data column to be used [\'data\', \'float_data\', or \'corrected\']</description>
        <value>data</value>
        <allowed kind="enum">
            <value>data</value>
            <value>float_data</value>
            <value>corrected</value>
        </allowed>
    </param>

    <param type="any" name="antenna">
        <description>select an antenna name or ID, e.g. \'PM03\'</description>
        <any type="variant" limittypes="string int"/>
        <value type="int">0</value>
    </param> 

    <param type="string" name="field">
        <description>select data by field IDs and names, e.g. \'3C2*\' (\'\'=all)</description>
        <value></value>
    </param>

    <param type="string" name="spw">
        <description>select data by IF IDs (spectral windows), e.g. \'3,5,7\' (\'\'=all)</description>
        <value></value>
    </param>

    <param type="string" name="timerange">
        <description>select data by time range, e.g. \'09:14:0~09:54:0\' (\'\'=all) (see examples in help)</description>
        <value></value>
    </param>

    <param type="string" name="scan">
        <description>select data by scan numbers, e.g. \'21~23\' (\'\'=all)</description>
        <value></value>
    </param>

    <param type="string" name="pol">
        <description>select data by polarization IDs, e.g. \'0,1\' (\'\'=all)</description>
        <value></value>
    </param>

    <param type="string" name="kernel">
        <description>spectral smoothing kernel type</description>
        <value>gaussian</value>
        <allowed kind="enum">
            <value>gaussian</value>
        </allowed>
    </param>
    
    <param type="int" name="kwidth" subparam="true">
        <description>smoothing kernel width in channel</description>
        <value>5</value>
    </param>

    <param type="string" name="outfile">
        <description>name of output file</description>
        <value></value>
    </param>

    <param type="bool" name="overwrite">
        <shortdescription>overwrite the output file if already exists [True, False] </shortdescription>
        <description>overwrite the output file if already exists</description>
        <value>False</value>
    </param>

    <constraints>
            <when param="kernel">
                <equals value="gaussian">
                    <default param="kwidth"><value>5</value></default>
                </equals>
            </when>
    </constraints>

    </input>

  <returns type="void"/>

  <example>
-----------------
Keyword arguments
-----------------
infile -- name of input SD dataset
datacolumn -- name of data column to be used
        options: 'data', 'float_data', or 'corrected'
        default: 'data'
antenna -- select an antenna name or ID
        default: 0
        example: 'PM03'
field -- select data by field IDs and names
        default: '' (use all fields)
        example: field='3C2*' (all names starting with 3C2)
                 field='0,4,5~7' (field IDs 0,4,5,6,7)
                 field='0,3C273' (field ID 0 or field named 3C273)
        this selection is in addition to the other selections to data
spw -- select data by IF IDs (spectral windows)/channels
        default: '' (use all IFs and channels)
        example: spw='3,5,7' (IF IDs 3,5,7; all channels)
                 spw='&lt;2' (IF IDs less than 2, i.e., 0,1; all channels)
                 spw='30~45GHz' (IF IDs with the center frequencies in range 30-45GHz; all channels)
                 spw='0:5~61' (IF ID 0; channels 5 to 61; all channels)
                 spw='3:10~20;50~60' (select multiple channel ranges within IF ID 3)
                 spw='3:10~20,4:0~30' (select different channel ranges for IF IDs 3 and 4)
                 spw='1~4;6:15~48' (for channels 15 through 48 for IF IDs 1,2,3,4 and 6)
        this selection is in addition to the other selections to data
timerange -- select data by time range
        default: '' (use all)
        example: timerange = 'YYYY/MM/DD/hh:mm:ss~YYYY/MM/DD/hh:mm:ss'
                 Note: YYYY/MM/DD can be dropped as needed:
                 timerange='09:14:00~09:54:00' # this time range
                 timerange='09:44:00' # data within one integration of time
                 timerange='&gt;10:24:00' # data after this time
                 timerange='09:44:00+00:13:00' #data 13 minutes after time
        this selection is in addition to the other selections to data
scan -- select data by scan numbers
        default: '' (use all scans)
        example: scan='21~23' (scan IDs 21,22,23)
        this selection is in addition to the other selections to data
pol -- select data by polarization IDs
        default: '' (use all polarizations)
        example: pol='0,1' (polarization IDs 0,1)
        this selection is in addition to the other selections to data
kernel -- type of spectral smoothing kernel
        options: 'gaussian'
        default: 'gaussian' (no smoothing)

    &gt;&gt;&gt;kernel expandable parameter
        kwidth -- width of spectral smoothing kernel
                options: (int) in channels 
                default: 5
outfile -- name of output file
        default: '' (&lt;infile&gt;_bs)
overwrite -- overwrite the output file if already exists
        options: (bool) True, False
        default: False
        NOTE this parameter is ignored when outform='ASCII'


-----------
DESCRIPTION
-----------
Task tsdsmooth performs smoothing along spectral axis using user-specified 
smoothing kernel. Currently only gaussian kernel is supported.


  </example>

</task>

</casaxml>
