<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/xmlcasa/xml/casa.xsd">


<!-- This is the param set for (new) sdreduce -->

<task type="function" name="sdreduce" startup="false" category="single dish">

  <shortdescription>ASAP SD task: do sdcal, sdaverage, and sdbaseline in one task</shortdescription>

  <description>
Task sdreduce performs data selection, calibration, spectral averaging
and/or baseline fitting for single-dish spectra. This task internally
calls the tasks, sdcal, sdaverage, and sdbaseline and it can be used to
run all the three steps in one task execution. This task has better
performance than invoking the three tasks separately because it runs all
three steps without writing intermediate data to disk.

It is possible to skip arbitrary operations by setting calmode = 'none'
(for calibration), average=False (for time and polarization averaging),
kernel = 'none' (for smoothing), and/or blfunc='none' (for baseline
fitting).

Please take a look at descriptions of tasks, sdcal, sdaverage, and
sdbalseline, for more information.
</description>

  <input>

    <param type="string" name="infile"  mustexist="true">
    <description>name of input SD dataset</description>
    <value></value>
    </param>

    <param type="any" name="antenna">
            <description>select an antenna name or ID, e.g. \'PM03\' (only effective for MS input)</description>
            <any type="variant" limittype="string int"/>
            <value type="int">0</value>
    </param> 

    <param type="string" name="fluxunit">
	    <shortdescription>units of the flux [\'K\' or \'Jy\'] (\'\'=current)</shortdescription>
	    <description>units of the flux (\'\'=current)</description>
	    <value></value>
            <allowed kind="enum">
                    <value></value>
                    <value>K</value>
                    <value>Jy</value>
                    <value>k</value>
                    <value>jy</value>
            </allowed>
    </param>

    <param type="string" name="telescopeparam" subparam='true'>
	    <description>parameters of telescope for flux conversion (see description in help of sdcal)</description>
	    <value></value>
    </param>

    <param type="string" name="field">
            <description>select data by field IDs and names, e.g. \'3C2*\' (\'\'=all)</description>
            <value></value>
    </param>

    <param type="string" name="spw">
            <description>select data by IF IDs (spectral windows), e.g. \'3,5,7\' (\'\'=all)</description>
            <value></value>
    </param>

    <param type="any" name="restfreq" subparam="true">
        <description>the rest frequency, e.g. \'1.41GHz\' (default unit: Hz) (see examples in help)</description>
        <any type="variant" limittype="double int string doubleArray intArray stringArray dictArray" />
        <value type="string"></value>
    </param>

    <param type="string" name="frame" subparam="true">
            <shortdescription>frequency reference frame [\'LSRK\', \'TOPO\', \'LSRD\', \'BARY\', \'GALACTO\', \'LGROUP\', or \'CMB\'] (\'\'=current)</shortdescription>
            <description>frequency reference frame (\'\'=current)</description>
            <value></value>
            <allowed kind="enum">
                    <value>LSRK</value>
                    <value>LSRD</value>
                    <value>BARY</value>
                    <value>GEO</value>
                    <value>TOPO</value>
                    <value>GALACTO</value>
                    <value>LGROUP</value>
                    <value>CMB</value>
                    <value></value>
           </allowed>
    </param>

    <param type="string" name="doppler" subparam="true">
            <shortdescription>doppler convention [\'RADIO\', \'OPTICAL\', \'Z\', \'BETA\', or \'GAMMA\'] (\'\'=current)</shortdescription>
            <description>doppler convention (\'\'=current). Effective only when spw selection is in velocity unit.</description>
            <value></value>
            <allowed kind="enum">
                    <value>RADIO</value>
                    <value>OPTICAL</value>
                    <value>Z</value>
                    <value>BETA</value>
                    <value>GAMMA</value>
                    <value></value>
           </allowed>
    </param>

    <param type="string" name="timerange">
	    <description>select data by time range, e.g. \'09:14:0~09:54:0\' (\'\'=all) (see examples in help of sdcal)</description>
	    <value></value>
    </param>

    <param type="string" name="scan">
	    <description>select data by scan numbers, e.g. \'21~23\' (\'\'=all)</description>
	    <value></value>
    </param>

    <param type="string" name="pol">
            <description>select data by polarization IDs, e.g. \'0,1\' (\'\'=all)</description>
            <value></value>
    </param>

    <param type="string" name="calmode">
	    <shortdescription>SD calibration mode [\'ps\', \'nod\', \'otf\', \'otfraster\', \'fs\', \'fsotf\' or \'none\'] (\'none\' = skip calibration)</shortdescription>
	    <description>SD calibration mode (\'none\' = skip calibration)</description>
	    <value>none</value>
	    <allowed kind="enum">
	    <value>ps</value>
	    <value>nod</value>
	    <value>fs</value>
	    <value>fsotf</value>
	    <value>quotient</value>
            <value>otf</value>
            <value>otfraster</value>
	    <value>none</value>
    </allowed>
    </param>

    <param type="any" name="fraction" subparam="true">
	    <description>fraction of the OFF data to mark as OFF spectra, e.g., \'10%\'</description>
            <any type="variant" limittype="string double"/>
            <value type="string">10%</value>
    </param>

    <param type="int" name="noff" subparam="true">
	    <shortdescription>number of the OFF data to mark, e.g., 10 (-1 = use fraction instead of number)</shortdescription>
	    <description>number of the OFF data to mark (-1 = use fraction instead of number)</description>
            <value>-1</value>
    </param>

    <param type="double" name="width" subparam="true">
	    <description>width of the pixel for edge detection</description>
            <value>0.5</value>
    </param>

    <param type="bool" name="elongated" subparam="true">
	    <shortdescription>the observed area is elongated in one direction [True, False]</shortdescription>
	    <description>the observed area is elongated in one direction</description>
            <value>False</value>
    </param>

    <param type="bool" name="markonly" subparam="true">
	    <description>do calibration (False) or just mark OFF (True)</description>
            <value>False</value>
    </param>

    <param type="bool" name="plotpointings" subparam="true">
            <shortdescription>plot pointing directions for ON and OFF [True, False]</shortdescription>
            <description>plot pointing direction for ON and OFF</description>
            <value>False</value>
    </param>

    <param type="double" name="tau">
            <description>the zenith atmospheric optical depth for correction (0. = no correction)</description>
            <value>0.0</value>
    </param>

    <param type="bool" name="average">
            <description>data averaging [True, False] </description>
            <value>False</value>
    </param>

    <param type="bool" name="timeaverage" subparam="true">
            <description>average spectra over time [True, False] (see examples in help of sdaverage)</description>
            <value>False</value>
    </param>

    <param type="string" name="tweight" subparam="true">
            <shortdescription>weighting for time averaging [\'tintsys\', \'tsys\', \'tint\', \'var\', or \'median\']</shortdescription>
            <description>weighting for time averaging</description>
            <value>tintsys</value>
	    <allowed kind="enum">
	    <value>var</value>
	    <value>tsys</value>
	    <value>tint</value>
	    <value>tintsys</value>
	    <value>median</value>
            </allowed>
    </param>

    <param type="bool" name="scanaverage" subparam="true">
            <description>average spectra within a scan number [True, False] (see examples in help of sdaverage)</description>
            <value>False</value>
    </param>

    <param type="bool" name="averageall" subparam="true">
            <description>set True only when averaging spectra with different spectral resolutions</description>
            <value>False</value>
    </param>

    <param type="bool" name="polaverage" subparam="true">
            <description>average spectra over polarizations [True, False]</description>
            <value>False</value>
    </param>

    <param type="string" name="pweight" subparam="true">
            <shortdescription>weighting for polarization averaging [\'tsys\' or \'var\']</shortdescription>
            <description>weighting for polarization averaging</description>
            <value>tsys</value>
	    <allowed kind="enum">
	    <value>var</value>
	    <value>tsys</value>
            </allowed>
    </param>

    <param type="string" name="kernel" ignorecase="true">
            <shortdescription>type of spectral smoothing kernel [\'hanning\', \'gaussian\', \'boxcar\', \'regrid\'] (\'\'=no smoothing)</shortdescription>
            <description>type of spectral smoothing kernel  (\'none\'=no smoothing)</description>
	    <value>none</value>
	    <allowed kind="enum">
	    <value>none</value>
	    <value>hanning</value>
	    <value>gaussian</value>
	    <value>boxcar</value>
	    <value>regrid</value>
	    <value></value>
            </allowed>
    </param>

    <param type="int" name="kwidth" subparam="true">
	    <description>width of smoothing kernel in channels</description>
	    <value>5</value>
    </param>

    <param type="string" name="chanwidth" subparam="true">
	    <description>width of regridded channels</description>
	    <value>5</value>
    </param>


    <param type="string" name="maskmode">
            <shortdescription>mode of setting additional channel masks [\'auto\', \'list\', or \'interact\']</shortdescription>
            <description>mode of setting additional channel masks</description>
            <value>auto</value>
            <allowed kind="enum">
            <value>auto</value>
            <value>list</value>
	    <value>interact</value>
            </allowed>
    </param>

    <param type="double" name="thresh" subparam='true'>
            <description>S/N threshold for linefinder</description>
            <value>5.0</value>
    </param>

    <param type="int" name="avg_limit" subparam='true'>
            <description>channel averaging for broad lines</description>
            <value>4</value>
    </param>

    <param type="intArray" name="edge" subparam='true'>
            <description>channels to drop at beginning and end of spectrum</description>
            <value type='vector'><value>0</value></value>
    </param>

    <param type="string" name="blfunc">
           <shortdescription>baseline model function [\'poly\', \'chebyshev\', \'cspline\', \'sinusoid\' or \'none\'] (\'none\' = skip baseline fit)</shortdescription>
            <description>baseline model function  (\'none\' = skip baseline fit)</description>
            <value>none</value>
	    <allowed kind="enum">
                <value>none</value>
	        <value>poly</value>
                <value>chebyshev</value>
	        <value>cspline</value>
	        <value>sinusoid</value>
	    </allowed>
    </param>

    <param type="int" name="order" subparam="true">
            <description>order of baseline model function</description>
            <value>5</value>
    </param>

    <param type="int" name="npiece" subparam="true">
            <description>number of element polynomials for cubic spline curve</description>
            <value>2</value>
    </param>

    <param type="bool" name="applyfft" subparam="true">
            <description>automatically set wave numbers of sinusoids [True, False]</description>
            <value>True</value>
    </param>

    <param type="string" name="fftmethod" subparam="true" ignorecase="true">
            <shortdescription>method for automatically set wave numbers of sinusoids (only \'fft\' is available now)</shortdescription>
            <description>method for automatically set wave numbers of sinusoids</description>
            <value>fft</value>
    </param>

    <param type="any" name="fftthresh" subparam="true">
            <description>threshold to select wave numbers of sinusoids</description>
	    <value type='double'>3.0</value>
    </param>

    <param type="any" name="addwn" subparam="true">
            <description>additional wave numbers to use</description>
	    <value type='vector'><value>0</value></value>
    </param>

    <param type="any" name="rejwn" subparam="true">
            <description>wave numbers NOT to use</description>
	    <value type='vector'><value></value></value>
    </param>

    <param type="double" name="clipthresh" subparam="true">
            <description>clipping threshold for iterative fitting</description>
            <value>3.0</value>
    </param>

    <param type="int" name="clipniter" subparam="true">
            <description>maximum iteration number for iterative fitting</description>
            <value>0</value>
    </param>

    <param type="bool" name="verifycal">
            <description>interactively verify the results of calibration [True, False] (see description in sdcal)</description>
            <value>False</value>
    </param>

    <param type="bool" name="verifysm">
            <description>interactively verify the results of smoothing for each spectrum. [not available for kernel="regrid"]</description>
            <value>False</value>
    </param>

    <param type="bool" name="verifybl">
            <shortdescription>interactively verify the results of operation for each spectrum [True, False] (see description in help)</shortdescription>
            <description>interactively verify the results of baseline fitting for each spectrum (only for blfunc="poly". see description in help)</description>
            <value>False</value>
    </param>

    <param type="bool" name="verbosebl">
            <description>output baseline fitting results to logger [True, False]</description>
            <value>True</value>
    </param>

    <param type="bool" name="bloutput">
            <description>output baseline fitting results to a text file [True, False]</description>
            <value>True</value>
    </param>

    <param type="string" name="blformat" ignorecase="true">
            <shortdescription>format of the text file specified with bloutput [\'\' or \'csv\']</shortdescription>
            <description>format of the text file specified with bloutput</description>
            <value></value>
        <allowed kind="enum">
            <value></value>
            <value>csv</value>
        </allowed>
    </param>

    <param type="bool" name="showprogress">
            <description>show progress status for large data [True, False]</description>
            <value>True</value>
    </param>

    <param type="int" name="minnrow" subparam="true">
            <description>minimum number of input spectra to show progress status in baseline fitting</description>
            <value>1000</value>
    </param>

    <param type="string" name="outfile">
	    <description>name of output file (See a WARNING in help)</description>
	    <value></value>
    </param>

    <param type="string" name="outform">
	    <shortdescription>output file format [\'ASAP\', \'MS2\', \'ASCII\', or \'SDFITS\']</shortdescription>
	    <description>output file format (See a WARNING in help)</description>
	    <value>ASAP</value>
	    <allowed kind="enum">
	    <value>ASCII</value>
	    <value>ascii</value>
	    <value>MS</value>
	    <value>ms</value>
	    <value>MS2</value>
	    <value>ms2</value>
	    <value>SDFITS</value>
	    <value>sdfits</value>
	    <value>ASAP</value>
	    <value>asap</value>
	    </allowed>
    </param>

    <param type="bool" name="overwrite">
            <description>overwrite the output file if already exists  [True, False]</description>
            <value>False</value>
    </param>

    <param type="int" name="plotlevel">
	    <description>plot and summarize results (0=none). See description in each task</description>
	    <value>0</value>
    </param>

    <constraints>
	    <when param="fluxunit">
		<equals value=""/>
		<equals value="K">
			<default param="telescopeparam"><value>""</value></default>
		</equals>
	        <equals value="k">
			<default param="telescopeparam"><value>""</value></default>
	        </equals>
	        <equals value="Jy">
			<default param="telescopeparam"><value>""</value></default>
	        </equals>
	        <equals value="jy">
			<default param="telescopeparam"><value>""</value></default>
	        </equals>
	    </when>
	    <when param="spw">
	        <notequals value="">
		    <default param="restfreq"><value type="string"></value></default>
		    <default param="frame"><value type="string"></value></default>
		    <default param="doppler"><value type="string"></value></default>
		</notequals>
	    </when>
            <when param="average">
                <equals type="bool" value="False"/>
                <equals type="bool" value="True">
                        <default param="timeaverage"><value type="bool">False</value></default>
                        <default param="tweight"><value type="string">tintsys</value></default>
                        <default param="scanaverage"><value type="bool">False</value></default>
                        <default param="averageall"><value type='bool'>False</value></default>
                        <default param="polaverage"><value type="bool">False</value></default>
                        <default param="pweight"><value type="string">tsys</value></default>
                </equals>
            </when>
            <when param="kernel">
                <equals value="none"/>
                <equals value=""/>
                <equals value="hanning"/>
                <equals value="gaussian">
                        <default param="kwidth"><value>5</value></default>
                </equals>
                <equals value="boxcar">
                        <default param="kwidth"><value>5</value></default>
                </equals>
		<equals value="regrid">
			<default param="chanwidth"><value type="string">5</value></default>
		</equals>
            </when>
            <when param="maskmode">
                <equals value="auto">
                        <default param="thresh"><value>5.0</value></default>
                        <default param="avg_limit"><value>4</value></default>
                        <default param="edge"><value type='vector'><value>0</value></value></default>
                </equals>
                <equals value="list"/>
                <equals value="interact"/>
            </when>
	    <when param="blfunc">
                <equals value="none"/>
		<equals value="poly">
			<default param="order"><value>5</value></default>
	        </equals>
		<equals value="chebyshev">
			<default param="order"><value>5</value></default>
			<default param="clipthresh"><value>3.0</value></default>
			<default param="clipniter"><value>0</value></default>
	        </equals>
                <equals value="cspline">
			<default param="npiece"><value>2</value></default>
			<default param="clipthresh"><value>3.0</value></default>
			<default param="clipniter"><value>0</value></default>
	        </equals>
                <equals value="sinusoid">
			<default param="applyfft"><value>True</value></default>
			<default param="fftmethod"><value type="string">fft</value></default>
			<default param="fftthresh"><value type="double">3.0</value></default>
			<default param="addwn"><value type="vector"><value>0</value></value></default>
			<default param="rejwn"><value type="vector"><value></value></value></default>
			<default param="clipthresh"><value>3.0</value></default>
			<default param="clipniter"><value>0</value></default>
	        </equals>
	    </when>
	    <when param="showprogress">
		<equals type="bool" value="True">
			<default param="minnrow"><value>1000</value></default>
	        </equals>
	    </when>
            <when param="calmode">
                <equals type="string" value="none"/>
                <equals type="string" value="ps"/>
                <equals type="string" value="nod"/>
                <equals type="string" value="fs"/>
                <equals type="string" value="fsotf"/>
                <equals type="string" value="quotient"/>
                <equals type="string" value="otf">
                    <default param="fraction"><value type="string">10%</value></default>
                    <default param="width"><value type="double">0.5</value></default>
                    <default param="elongated"><value type="bool">False</value></default>
                    <default param="markonly"><value type="bool">False</value></default>
                    <default param="plotpointings"><value type="bool">False</value></default>
                </equals>
                <equals type="string" value="otfraster">
                    <default param="fraction"><value type="string">10%</value></default>
                    <default param="noff"><value type="int">-1</value></default>
                    <default param="markonly"><value type="bool">False</value></default>
                    <default param="plotpointings"><value type="bool">False</value></default>
                </equals>
            </when>
    </constraints>

    </input>

  <returns type="void"/>

  <example>
Keyword arguments:
infile -- name of input SD dataset
antenna -- select an antenna name or ID
        default: 0
        example: 'PM03'
        NOTE this parameter is effective only for MS input
fluxunit -- units for line flux
        options: 'K','Jy',''
        default: '' (keep current fluxunit in data)
        WARNING: For GBT data, see description below.
    &gt;&gt;&gt; fluxunit expandable parameter
        telescopeparam -- parameters of telescope for flux conversion
                options: (str) name or (list) list of gain info
                default: '' (none set)
                example: if telescopeparam='', it tries to get the telescope
                         name from the data.
                         Full antenna parameters (diameter,ap.eff.) known
                         to ASAP are
                         'ATPKSMB', 'ATPKSHOH', 'ATMOPRA', 'DSS-43',
                         'CEDUNA','HOBART'. For GBT, it fixes default fluxunit
                         to 'K' first then convert to a new fluxunit.
                         telescopeparam=[104.9,0.43] diameter(m), ap.eff.
                         telescopeparam=[0.743] gain in Jy/K
                         telescopeparam='FIX' to change default fluxunit
                         see description below

field -- select data by field IDs and names
        default: '' (use all fields)
        example: field='3C2*' (all names starting with 3C2)
                 field='0,4,5~7' (field IDs 0,4,5,6,7)
                 field='0,3C273' (field ID 0 or field named 3C273)
        this selection is in addition to the other selections to data
spw -- select data by IF IDs (spectral windows)/channels
       NOTE channel range selections are interpreted as mask regions to
       INCLUDE in BASELINE fit, and ignored in the other operations.
       when maskmode is 'auto' or 'interact', the channel mask 
       will be applied first before fitting as base mask
        default: '' (use all IFs and channels)
        example: spw='3,5,7' (IF IDs 3,5,7; all channels)
                 spw='&lt;2' (IF IDs less than 2, i.e., 0,1; all channels)
                 spw='30~45GHz' (IF IDs with the center frequencies in range 30-45GHz; all channels)
                 spw='0:5~61' (IF ID 0; channels 5 to 61)
                 spw='3:10~20;50~60' (select multiple channel ranges within IF ID 3)
                 spw='3:10~20,4:0~30' (select different channel ranges for IF IDs 3 and 4)
                 spw='1~4;6:15~48' (for channels 15 through 48 for IF IDs 1,2,3,4 and 6)
        this selection is in addition to the other selections to data
    &gt;&gt;&gt; spw expandable parameters
        restfreq -- the rest frequency
                    available type includes float, int, string, list of float, 
                    list of int, list of string, and list of dictionary. the 
                    default unit of restfreq in case of float, int, or string 
                    without unit is Hz. string input can be a value only 
                    (treated as Hz) or a value followed by unit for which 'GHz',
                    'MHz','kHz',and 'Hz' are available. 
                    a list can be used to set different rest frequencies for 
                    each IF. the length of list input must be number of IFs. 
                    dictionary input should be a pair of line name and 
                    frequency with keys of 'name' and 'value', respectively. 
                    values in the dictionary input follows the same manner as 
                    as for single float or string input. 
                example: 345.796
                         '1420MHz'
                         [345.8, 347.0, 356.7]
                         ['345.8MHz', '347.0MHz', '356.7MHz']
                         [{'name':'CO','value':345}]
        frame -- frequency reference frame
                options: 'LSRK', 'TOPO', 'LSRD', 'BARY', 'GALACTO', 'LGROUP', 'CMB'
                default: '' (keep current frame in data)
        doppler -- doppler convention (effective only when spw is in
                   velocity unit)
                options: 'RADIO', 'OPTICAL', 'Z', 'BETA', or 'GAMMA'
                default: '' (keep current doppler setting in data)

timerange -- select data by time range
        default: '' (use all)
        example: timerange = 'YYYY/MM/DD/hh:mm:ss~YYYY/MM/DD/hh:mm:ss'
                 Note: YYYY/MM/DD can be dropped as needed:
                 timerange='09:14:00~09:54:00' # this time range
                 timerange='09:44:00' # data within one integration of time
                 timerange='&gt;10:24:00' # data after this time
                 timerange='09:44:00+00:13:00' #data 13 minutes after time
        this selection is in addition to the other selections to data
scan -- select data by scan numbers
        default: '' (use all scans)
        example: scan='21~23' (scan IDs 21,22,23)
        this selection is in addition to the other selections to data
pol -- select data by polarization IDs
        default: '' (use all polarizations)
        example: pol='0,1' (polarization IDs 0,1)
        this selection is in addition to the other selections to data

calmode -- calibration mode
        options: 'ps','nod','otf','otfraster',
                 'fs','quotient','none'
        default: 'none'
        example: choose mode 'none' if you have already calibrated
                 and want to correct for atmospheric opacity defined
                 by tau, subtract baseline or average/smooth spectra.
    &gt;&gt;&gt; calmode expandable parameter
         fraction -- edge marker parameter of 'otf' and 'otfraster'.
                     Specify a number of OFF integrations (at each
                     side of the raster rows in 'otfraster' mode)
                     as a fraction of total number of integrations.
                     In 'otfraster' mode, number of integrations 
                     to be marked as OFF, n_off, is determined by 
                     the following formula,

                        n_off = floor(fraction * n),

                     where n is number of integrations per raster 
                     row. Note that n_off from both sides will be  
                     marked as OFF so that twice of specified 
                     fraction will be marked at most. For example, 
                     if you specify fraction='10%', resultant 
                     fraction of OFF integrations will be 20% at 
                     most.
                     In 'otf' mode, n_off is given by,

                        n_off = floor(fraction * n),

                     where n is number of total integrations.
                     n_off is used as criterion of iterative marking
                     process. Therefore, resulting total number of 
                     OFFs will be larger than n_off. In practice,
                     fraction is a geometrical fraction of edge
                     region. Thus, if integrations are concentrated
                     on edge region (e.g. some of Lissajous
                     patterns), then resulting n_off may be 
                     unexpectedly large.
                 default: '10%'
                 options: '20%' in string style or float value less 
                          than 1.0 (e.g. 0.15).
                          'auto' is available only for 'otfraster'. 
         noff -- edge marking parameter for 'otfraster'.
                 It is used to specify a number of OFF scans near 
                 edge directly. Value of noff comes before setting 
                 by fraction. Note that n_off from both sides will 
                 be marked as OFF so that twice of specified noff 
                 will be marked at most.
                 default: -1 (use fraction)
                 options: any positive integer
         width -- edge marking parameter for 'otf'.
                  Pixel width with respect to a median spatial 
                  separation between neighboring two data in time.
                  Default will be fine in most cases.
                 default: 0.5
                 options: float value
         elongated -- edge marking parameter for 'otf'.
                      Set True only if observed area is elongeted 
                      in one direction.
                 options: (bool) True, False
                 default: False
         markonly -- set True if you want to save data just after 
                     edge marking (i.e. uncalibrated data) to see 
                     how OFF scans are defined.
                 options: (bool) True, False
                 default: False
         plotpointings -- load plotter and plot pointing directions of
                          ON and OFF scans.
                 options: (bool) True, False
                 default: False

tau -- the zenith atmospheric optical depth for correction 
        default: 0.0 (no correction)
average -- averaging on spectral data 
        options: (bool) True,False
        default: False

    &gt;&gt;&gt;average expandable parameter
        timeaverage -- average spectra over time
                options: (bool) True, False
                default: False
                example: if True, this happens after calibration
        tweight -- weighting for time averaging (effective only when
                   timeaverage=True)
                options: 'var'   (1/var(spec) weighted)
                         'tsys'  (1/Tsys**2 weighted)
                         'tint'  (integration time weighted)
                         'tintsys'  (Tint/Tsys**2)
                         'median'  ( median averaging)
                default: 'tintsys'
        scanaverage -- average spectra within a scan number (effective
                       only when timeaverage=True)
                       when True, spectra are NOT averaged over
                       different scan numbers. 
                options: (bool) True, False
                default: False
        averageall -- average multi-resolution spectra (effective only
                      when timeaverage=True)
                      spectra are averaged by referring their frequency
                      coverage 
                 default: False
        polaverage -- average spectra over polarizations
                options: (bool) True, False
                default: False
        pweight -- weighting for polarization averaging (effective only
                   when polaverage=True)
                options: 'var'  (1/var(spec) weighted)
                         'tsys' (1/Tsys**2 weighted)
                default: 'tsys'

kernel -- type of spectral smoothing kernel
        options: 'none', 'hanning','gaussian','boxcar','regrid', ''(='none')
        default: 'none' (no smoothing)

    &gt;&gt;&gt;kernel expandable parameter
        kwidth -- width of spectral smoothing kernel
                options: (int) in channels 
                default: 5
	        example: 5 or 10 seem to be popular for boxcar
	                 ignored for hanning (fixed at 5 chans)
                         (0 will turn off gaussian or boxcar)
        chanwidth -- channel width of regridded spectra
	         default: '5' (in channels)
	         example: '500MHz', '0.2km/s'

maskmode -- mode of setting additional channel masks
        options: 'auto', 'list', or 'interact'
        default: 'auto'
        example: maskmode='auto' runs linefinder to detect line regions 
                 to be excluded from fitting. this mode requires three 
                 expandable parameters: thresh, avg_limit, and edge.
                 USE WITH CARE! May need to tweak the expandable parameters.
                 maskmode='list' uses the given masklist only: no additional 
                 masks applied.
                 maskmode='interact' allows users to manually modify the 
                 mask regions by dragging mouse on the spectrum plotter GUI.
                 use LEFT or RIGHT button to add or delete regions, 
                 respectively.
       
    &gt;&gt;&gt; maskmode expandable parameters
        thresh -- S/N threshold for linefinder. a single channel S/N ratio
                  above which the channel is considered to be a detection. 
                default: 5
        avg_limit -- channel averaging for broad lines. a number of
                     consecutive channels not greater than this parameter
                     can be averaged to search for broad lines.
                default: 4
        edge -- channels to drop at beginning and end of spectrum
                default: 0
                example: edge=[1000] drops 1000 channels at beginning AND end.
                         edge=[1000,500] drops 1000 from beginning and 500
                         from end.
        Note: For bad baselines threshold should be increased,
        and avg_limit decreased (or even switched off completely by
        setting this parameter to 1) to avoid detecting baseline
        undulations instead of real lines.

blfunc -- baseline model function
        options: 'poly', 'chebyshev', 'cspline', or 'sinusoid'
        default: 'none' (no baseline fit)
        example: blfunc='poly' uses a single polynomial line of 
                 any order which should be given as an expandable 
                 parameter 'order' to fit baseline. 
                 blfunc='chebyshev' uses Chebyshev polynomials. 
                 blfunc='cspline' uses a cubic spline function, a piecewise 
                 cubic polynomial having C2-continuity (i.e., the second 
                 derivative is continuous at the joining points). 
                 blfunc='sinusoid' uses a combination of sinusoidal curves. 
    &gt;&gt;&gt; blfunc expandable parameters
        order -- order of baseline model function
                options: (int) (&lt;0 turns off baseline fitting)
                default: 5
                example: typically in range 2-9 (higher values
                         seem to be needed for GBT)
        npiece -- number of the element polynomials of cubic spline curve
                options: (int) (&lt;0 turns off baseline fitting)
                default: 2
        applyfft -- automatically set wave numbers of sinusoidal functions 
                    for fitting by applying some method like FFT.
                options: (bool) True, False
                default: True
        fftmethod -- method to be used when applyfft=True. Now only 
                     'fft' is available and it is the default.
        fftthresh -- threshold to select wave numbers to be used for 
                     sinusoidal fitting. both (float) and (str) accepted.
                     given a float value, the unit is set to sigma.
                     for string values, allowed formats include:
                     'xsigma' or 'x' (= x-sigma level. e.g., '3sigma'), or
                     'topx' (= the x strongest ones, e.g. 'top5').
                default is 3.0 (unit: sigma).
        addwn -- additional wave number(s) of sinusoids to be used 
                 for fitting. 
                 (list) and (int) are accepted to specify every
                 wave numbers. also (str) can be used in case
                 you need to specify wave numbers in a certain range.
                 default: [0] (i.e., constant is subtracted at least)
                 example: 0
                          [0,1,2]
                          'a-b' (= a, a+1, a+2, ..., b-1, b),
                          '&lt;a'  (= 0,1,...,a-2,a-1),
                          '&gt;=a' (= a, a+1, ... up to the maximum wave
                                   number corresponding to the Nyquist
                                   frequency for the case of FFT).
        rejwn -- wave number(s) of sinusoid NOT to be used for fitting.
                 can be set just as addwn but has higher priority:
                 wave numbers which are specified both in addwn
                 and rejwn will NOT be used. 
                 default: []
        clipthresh -- clipping threshold for iterative fitting
                 default: 3
        clipniter -- maximum iteration number for iterative fitting
                 default: 0 (no iteration, i.e., no clipping)

verifycal -- interactively verify the results of calibration
          See description of verify parameter in the task, sdcal,
          for details.
        options: (bool) True,False
        default: False
verifysm -- interactively verify the results of smoothing for each
            spectrum.
          See description of verify parameter in the task, sdaverage,
          for details.
        options: (bool) True,False
        default: False
        Note: verification is not yet available for kernel='regrid'
verifybl -- interactively verify the results of baseline fitting for
            each spectrum.
          See description of verify parameter in the task, sdbaseline,
          for details.
        options: (bool) True,False
        default: False
        NOTE: Currently available only when blfunc='poly'
verbosebl -- output fitting results to logger. If False, the fitting results
             including coefficients, residual rms, etc., are not output to
             the CASA logger, while the processing speed gets faster.
        options: (bool) True, False
        default: True
bloutput -- output fitting results to a text file. if False, the fitting
            results including coefficients, residual rms, etc., are not
            output to a text file (&lt;outfile&gt;_blparam.txt), while
            the processing speed gets faster.
        options: (bool) True, False
        default: True
blformat -- format of the logger output and text file specified with bloutput
        options: '', 'csv'
        default: '' (same as in the past, easy to read but huge)
showprogress -- show progress status for large data
        options: (bool) True, False
        default: True
    &gt;&gt;&gt; showprogress expandable parameter
        minnrow -- minimum number of input spectra to show progress status
                 default: 1000
outfile -- name of output file
        default: '' (&lt;infile&gt;_cal)
outform -- output file format
        options: 'ASAP','MS2', 'ASCII','SDFITS'
        default: 'ASAP'
        NOTE the ASAP format is easiest for further sd
        processing; use MS2 for CASA imaging.
        If ASCII, then will append some stuff to
        the outfile name
overwrite -- overwrite the output file if already exists
        options: (bool) True,False
        default: False
        NOTE this parameter is ignored when outform='ASCII'
plotlevel -- control for plotting and summary of results
        options: (int) 0, 1, 2, and their negative counterparts
	default: 0 (no plotting)
	example: plotlevel=1; show plot of spectra (see description of
                              the parameter in sdcal, sdaverage, and sdbaseline)
                 plotlevel=2; additionally list data before and after operation.
                 plotlevel&lt;0 as abs(plotlevel), e.g.
                 -1 =&gt; hardcopy of final plot at each step, i.e.,
                 &lt;outfile&gt;_calspec.eps, &lt;outfile&gt;_smspec.eps, and/or
                 &lt;outfile&gt;_bsspec.eps

-------
WARNING
-------
For the GBT raw SDFITS format data as input:
SDtasks are able to handle GBT raw SDFITS format data since the 
data filler is available. However, the functionality is not well 
tested yet, so that there may be unknown bugs.  

  </example>

</task>

</casaxml>
