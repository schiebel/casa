<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/xmlcasa/xml/casa.xsd">


<!-- This is the param set for sdtpimaging -->

<task type="function" name="sdtpimaging" startup="false" category="single dish">

  <shortdescription>SD task: do a simple calibration (baseline subtraction) and imaging for total power data </shortdescription>

  <description>
Task sdtpimaging performs data selection, calibration, and imaging for 
single-dish totalpower raster scan data.  This is a still experimental 
task made to work mostly for the data taken at the ALMA Testing 
Facility (ATF) or OSF. Currently, this task directly accesses the 
Measurement Set data only because of the data access efficiency. So it 
differs from other single-dish tasks that mostly operate on the ASAP 
scantable data format.  By setting calmode='none', one can run 
sdtpimaging to plot the data (raw or calibrated, if exists) and 
further imaging by setting createimage=True. 

The calibration available at this moment is just a simple baseline 
subtraction for each scan. The fitted regions set by masklist are the 
common for all the scans. Selection of the antennas can be made by 
setting antenna IDs or antenna names in string (e.g. '0', '0,1', 
'DV01',etc.). 

For baseline subtraction, it currently works properly for a single 
antenna selection. So a separate sdtpimaging task needs to be ran for 
each antenna. It currently assumes that the data has a single spw(=0) 
and fieldid(=0). NOTE this task only accepts spectral window with
single channel. By setting flaglist, one can set flag by scan numbers 
to be excluded from imaging. (Note: 'scan numbers' are determined from 
state id and related to SUB_SCAN column in STATE subtable and not to 
SCAN_NUMBER in MS.) By default, baseline subtraction stage overwrites 
(FLOAT_)DATA column of input data. You can keep original data by 
setting backup parameter to True. In this case, the task make a copy 
of input data specified by infile parameter. Name of backup file is 
{infile}.sdtpimaging.bak.{timestamp}.
</description>

  <input>

    <param type="string" name="infile"  mustexist="true">
    <description>name of an input SD Measurementset (only MS is allowed for this task)</description>
    <value></value>
    </param>

    <param type="string" name="calmode">
	    <shortdescription>SD calibration mode [\'none\' or \'baseline\']</shortdescription>
	    <description>SD calibration mode</description>
	    <value>none</value>
	    <allowed kind="enum">
	    <value>baseline</value>
	    <value>none</value>
    </allowed>
    </param>

    <param type="intArray" name="masklist" subparam="true">
	    <description>numbers of integrations from each edge of each scan to be included for baseline fitting, e.g. [30,30]</description>
            <value></value>
    </param>

    <param type="int" name="blpoly" subparam="true">
	    <description>polynomial order of the baseline fit, e.g. 1</description>
             <value>1</value>
    </param>

    <param type="bool" name="backup" subparam="true">
            <description>set True to create backup of input data [True, False]</description>
            <value>True</value>
    </param>

    <param type="intArray" name="flaglist">
	    <description>list of scan numbers to flag, e.g. [[1,3], 80]</description>
	    <value></value>
    </param>

    <param type="string" name="antenna">
            <description>select data by antenna names or IDs, e.g. \'PM03\'</description>
            <value></value>
    </param>

    <param type="int" name="spw">
	    <description>spectral window ID for imaging, e.g. 11 (should have only one channel)</description>
	    <value>0</value>
    </param>

    <param type="string" name="stokes">
            <description>stokes parameters or polarization types to image, e.g. \'XX\' (\'\'=Stokes I)</description>
            <value></value>
    </param>

    <param type="bool" name="createimage">
            <description>do imaging? [True, False]</description>
            <value>False</value>
    </param>

<!-- imaging paramters -->
    <param type="string" name="outfile" subparam="true">
	    <description>name of output image</description>
	    <value></value>
    </param>

    <param type="intArray" name="imsize" subparam="true">
            <description>x and y image size in pixels, e.g., [64,64]. Single value: same for both spatial axes</description>
            <value type="vector">
    <value>256</value><value>256</value>
            </value>
    </param>

    <param type="doubleArray" name="cell" units="arcmin" subparam="true">
    <description>x and y cell size, (e.g., [\'8arcsec\',\'8arcsec\']. default unit arcmin.</description>
    <value type="vector"><value>1.0</value><value>1.0</value></value>
    </param>

    <param type="any" name="phasecenter" subparam="true">
            <description>image center direction: position or field index, e.g., \'J2000 17:30:15.0 -25.30.00.0\'</description>
            <any type="variant"/>
            <value type="string"></value>
    </param>


    <param type="string" name="ephemsrcname" subparam="true">
	    <description>ephemeris source name, e.g. \'mars\'</description>
	    <value></value>
    </param>

    <param type="string" name="pointingcolumn" subparam="true">
            <shortdescription>pointing data column to use [\'direction\', \'target\', \'pointing_offset\', \'source_offset\' or \'encoder\']</shortdescription>
            <description>pointing data column to use</description>
	    <value>direction</value>
	    <allowed kind="enum" ignorecase="True">
	    <value>target</value>
	    <value>pointing_offset</value>
	    <value>source_offset</value>
	    <value>encoder</value>
	    <value>direction</value>
    </allowed>
    </param>

    <param type="string" name ="gridfunction" subparam="true">
            <shortdescription>gridding function for imaging [\'BOX\', \'SF\', \'PB\', \'GAUSS\' or \'GJINC\'] (see description in help)</shortdescription>
            <description>gridding function for imaging (see description in help)</description>
            <value>BOX</value>
            <allowed kind="enum">
                <value>BOX</value>
                <value>PB</value>
                <value>SF</value>
                <value>GAUSS</value>
                <value>GJINC</value>
                <value>box</value>
                <value>pb</value>
                <value>sf</value>
                <value>gauss</value>
                <value>gjinc</value>
            </allowed>
    </param>

    <param type="int" name="plotlevel">
	    <description>plot results (0=none) see description in help</description>
	    <value>0</value>
    </param>

    <constraints>
            <when param="calmode">
                <equals value="none"/>
                <equals value="baseline">
                        <default param="masklist"><value type="vector"></value></default>
                        <default param="blpoly"><value type="int">1</value></default>
                        <default param="backup"><value type="bool">True</value></default>
                </equals>
            </when>
            <when param="createimage">
                <equals type="bool" value="False"/>
                <equals type="bool" value="True">
                        <default param="outfile"><value type="string"></value></default>
                        <default param="imsize"><value type="vector"><value>256</value><value>256</value></value></default>
			<default param="cell"><value type="vector"><value>1</value><value>1</value></value></default>
                        <default param="phasecenter"><value type="string"></value></default>
                        <default param="ephemsrcname"><value type="string"></value></default>
                        <default param="pointingcolumn"><value type="string">direction</value></default>
                        <default param="gridfunction"><value type="string">BOX</value></default>
                </equals>
            </when>
    </constraints>

    </input>

  <returns type="void"/>

  <example>
Keyword arguments:
infile -- name of an input SD Measurementset
        example: 'm100.tp.ms'
calmode -- SD calibration mode (currently only baseline subtraction)
        options: 'baseline','none'
        default: 'none'
        example: choose mode 'none' if you have
                 already calibrated and want to do
                 plotting nd/or imaging 
    &gt;&gt;&gt; calmode='baseline' expandable parameters
        masklist -- numbers of integrations from each edge of each scan
                    to be included for baseline fitting
                default: [] (no edge. should define positive number)
                example: [30,30] or [30] 
                         used first 30 rows and last 30 rows of each scan
                         for the baseline 
        blpoly -- polynomial order of the baseline fit
                default: (int) 1
                example: any number &gt;=0
        backup -- set True to create backup of input data
                options: (bool) True, False
                default: True
flaglist -- list of scan numbers to flag (ranges can be accepted)  
        default: [] (use all scans)
        example: [[0,3],80]
                 flag the scan range [0,3] = [0,1,2,3] and scan 80 
antenna -- select data based on antenna names or IDs
        default: '' (use all antennas)
        example: antenna='0,1' (antenna ID 0 and 1)
                 antenna='DV01'
        WARNING: currently baseline subtraction properly 
                 only one of the antennas.
spw -- spectral window ID for imaging (should have only one channel)
        default: 0
        example: spw=11 (SPW ID 11)
stokes -- stokes parameters or polarization types to image
        default: '' (Stokes I)
        example: stokes='XX' (image plane of linear polarization, XX)
                 stokes='XXYY' (image cube with XX and YY image in each plane)
                 stokes='I' (Stokes I image = total intensity)
createimage -- do imaging? 
        options: (bool) True, False
        default: False 
    &gt;&gt;&gt; createimage=True expandable parameters
        outfile -- name of output image
                default: ''
                example: 'mySDimage.im'
        imsize -- x and y image size in pixels, symmetric for single value
                default: [256,256]
                example: imsize=200 (equivalent to [200,200])
        cell -- x and y cell size. default unit arcmin
                default: '1.0arcmin'
                example: cell=['0.2arcmin, 0.2arcmin']
                         cell='0.2arcmin' (equivalent to example above)
        phasecenter -- image phase center: direction measure or field ID
                default: 0
                example: 'J2000 13h44m00 -17d02m00', 'AZEL -123d48m29 15d41m41'
        ephemsrcname -- ephemeris source name of moving source to use to
                        correct movements of source direction during
                        observation.
                default: ''
                         if the source name in the data matches one of the 
                         known solar objects by the system, this task 
                         automatically set the source name. 
                example: 'mars'
        pointingcolumn -- pointing data column to use
                options: 'direction', 'target', 'pointing_offset', 
                        'source_offset', 'encoder' 
                default: 'direction'
        gridfunction -- gridding function for imaging
                options: 'BOX' (Box-car), 'SF' (Spheroidal), 
                         'PB' (Primary-beam), 'GAUSS' (Gaussian),
                         'GJINC' (Gaussian*Jinc)
                default: 'BOX'
                example: 'SF'
plotlevel -- control for plotting of results
        options: (int) 0=none, 1=some, 2=more, &lt;0=hardcopy
        default: 0 (no plotting)
        example: plotlevel&lt;0 as abs(plotlevel), e.g.
                 -1: hardcopy plot 
                     (will be named &lt;infile&gt;_scans.eps)
                  1: plot raw data, calibrated data 
                     (for calmode='baseline)
                     plot raw or if exist calibrated data 
                     (for calmode='none')
                  2: plot raw data, progressively display baseline 
                     fitting for each scan, and final calibrated data 
                     (for calmode='baseline')  


-----------------
Gridding Kernel
-----------------
The parameter gridfunction sets gridding function (convolution kernel)
for imaging. Currently, the task supports 'BOX' (Box-car), 'SF' (Prolate
Spheroidal Wave Function), 'GAUSS' (Gaussian), 'GJINC' (Gaussian*Jinc),
where Jinc(x) = J_1(pi*x/c)/(pi*x/c) with a first order Bessel function
J_1, and 'PB' (Primary Beam). For 'PB', correct antenna informations
should be included in input file. 
Sub-parameters for convolution functions cannot be specified in this
task. To costomize your convolution function, please do imaging using
sdimaging task or imager tool.
  </example>

</task>

</casaxml>
